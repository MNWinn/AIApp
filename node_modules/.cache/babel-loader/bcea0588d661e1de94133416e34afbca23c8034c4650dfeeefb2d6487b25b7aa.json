{"ast":null,"code":"var _jsxFileName = \"/Users/mnwinn/Vscode-Projects/RealEstateApp/reappweb/src/Pages/Bot.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { Configuration, OpenAIApi } from \"openai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Bot = () => {\n  _s();\n  const configuration = new Configuration({\n    apiKey: \"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\"\n  });\n  const openai = new OpenAIApi(configuration);\n  const [prompt, setPrompt] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const handleClick = async () => {\n    // Add the user's message to the conversation history\n    setMessages([...messages, {\n      text: prompt,\n      sender: \"user\"\n    }]);\n    try {\n      // Concatenate conversation history to be included in the prompt\n      const history = messages.map(msg => `${msg.sender === \"user\" ? \"User:\" : \"AI:\"} ${msg.text}`).join(\"\\n\");\n      const fullPrompt = history + \"\\nUser: \" + prompt + \"\\nAI:\";\n      const response = await openai.createCompletion({\n        model: \"text-davinci-003\",\n        prompt: fullPrompt,\n        temperature: 0.5,\n        max_tokens: 100\n      });\n\n      // Add the AI's response to the conversation history\n      const responseText = response.data.choices[0].text.trim();\n      setMessages([...messages, {\n        text: responseText,\n        sender: \"ai\"\n      }]);\n      setResult(responseText);\n    } catch (error) {\n      console.error(error);\n    }\n    setPrompt(\"\"); // Clear the input field\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Real Estate App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your AI Real Estate Assistant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.sender}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"sender\",\n            children: [message.sender, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), \" \", message.text]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"user-input\",\n          value: prompt,\n          onChange: e => setPrompt(e.target.value),\n          placeholder: \"Type your message here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"send-button\",\n          onClick: handleClick,\n          disabled: loading || prompt.length === 0,\n          children: loading ? \"Sending...\" : \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(Bot, \"vAHD1kkyszCMiJJ9b7MepyQWp8Y=\");\n_c = Bot;\nexport default Bot;\nvar _c;\n$RefreshReg$(_c, \"Bot\");","map":{"version":3,"names":["React","useState","Configuration","OpenAIApi","jsxDEV","_jsxDEV","Bot","_s","configuration","apiKey","openai","prompt","setPrompt","result","setResult","loading","setLoading","messages","setMessages","handleClick","text","sender","history","map","msg","join","fullPrompt","response","createCompletion","model","temperature","max_tokens","responseText","data","choices","trim","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","message","index","type","id","value","onChange","e","target","placeholder","onClick","disabled","length","_c","$RefreshReg$"],"sources":["/Users/mnwinn/Vscode-Projects/RealEstateApp/reappweb/src/Pages/Bot.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport { Configuration, OpenAIApi } from \"openai\";\n\nconst Bot = () => {\n\n    const configuration = new Configuration({\n        apiKey: \"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\",\n    });\n    const openai = new OpenAIApi(configuration);\n\n    const [prompt, setPrompt] = useState(\"\");\n    const [result, setResult] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [messages, setMessages] = useState([]);\n\n    const handleClick = async () => {\n        // Add the user's message to the conversation history\n        setMessages([...messages, { text: prompt, sender: \"user\" }]);\n\n        try {\n            // Concatenate conversation history to be included in the prompt\n            const history = messages\n                .map((msg) => `${msg.sender === \"user\" ? \"User:\" : \"AI:\"} ${msg.text}`)\n                .join(\"\\n\");\n            const fullPrompt = history + \"\\nUser: \" + prompt + \"\\nAI:\";\n\n            const response = await openai.createCompletion({\n                model: \"text-davinci-003\",\n                prompt: fullPrompt,\n                temperature: 0.5,\n                max_tokens: 100,\n            });\n\n            // Add the AI's response to the conversation history\n            const responseText = response.data.choices[0].text.trim();\n            setMessages([...messages, { text: responseText, sender: \"ai\" }]);\n            setResult(responseText);\n        } catch (error) {\n            console.error(error);\n        }\n\n        setPrompt(\"\"); // Clear the input field\n    };\n\n    return (\n        <div className=\"container\">\n            <h1>Real Estate App</h1>\n            <h2>Your AI Real Estate Assistant</h2>\n            <div className=\"chatbox\">\n                <div className=\"messages\">\n                    {messages.map((message, index) => (\n                        <div key={index} className={`message ${message.sender}`}>\n                            <span className=\"sender\">{message.sender}:</span> {message.text}\n                        </div>\n                    ))}\n                </div>\n                <div className=\"input-area\">\n                    <input\n                        type=\"text\"\n                        id=\"user-input\"\n                        value={prompt}\n                        onChange={(e) => setPrompt(e.target.value)}\n                        placeholder=\"Type your message here...\"\n                    />\n                    <button id=\"send-button\" onClick={handleClick} disabled={loading || prompt.length === 0}>\n                        {loading ? \"Sending...\" : \"Send\"}\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Bot;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}