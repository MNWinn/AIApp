{"ast":null,"code":"var _jsxFileName = \"/Users/mnwinn/Vscode-Projects/RealEstateApp/reappweb/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Configuration, OpenAIApi } from \"openai\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const configuration = new Configuration({\n    apiKey: \"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\"\n  });\n  const openai = new OpenAIApi(configuration);\n  const [messages, setMessages] = useState([]); // Add this line\n\n  const handleClick = async () => {\n    setLoading(true);\n\n    // Add the user's message to the conversation history\n    setMessages([...messages, {\n      text: prompt,\n      sender: \"user\"\n    }]);\n    try {\n      // Concatenate conversation history to be included in the prompt\n      const history = messages.map(msg => `${msg.sender === \"user\" ? \"User:\" : \"AI:\"} ${msg.text}`).join(\"\\n\");\n      const fullPrompt = history + \"\\nUser: \" + prompt + \"\\nAI:\";\n      const response = await openai.createCompletion({\n        model: \"text-davinci-003\",\n        prompt: fullPrompt,\n        temperature: 0.5,\n        max_tokens: 100\n      });\n\n      // Add the AI's response to the conversation history\n      const responseText = response.data.choices[0].text.trim();\n      setMessages([...messages, {\n        text: responseText,\n        sender: \"ai\"\n      }]);\n      setResult(responseText);\n    } catch (error) {\n      console.error(error);\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Real Estate App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your AI Real Estate Assistant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"user-input\",\n          placeholder: \"Type your message here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"send-button\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dxxfFX7fiXmC0h9Fk+B7I5VonqM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Configuration","OpenAIApi","jsxDEV","_jsxDEV","App","_s","configuration","apiKey","openai","messages","setMessages","handleClick","setLoading","text","prompt","sender","history","map","msg","join","fullPrompt","response","createCompletion","model","temperature","max_tokens","responseText","data","choices","trim","setResult","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","id","placeholder","_c","$RefreshReg$"],"sources":["/Users/mnwinn/Vscode-Projects/RealEstateApp/reappweb/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Configuration, OpenAIApi } from \"openai\";\nimport \"./App.css\";\n\nfunction App() {\n  const configuration = new Configuration({\n    apiKey: \"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\",\n  });\n  const openai = new OpenAIApi(configuration);\n\n  const [messages, setMessages] = useState([]); // Add this line\n\n  const handleClick = async () => {\n    setLoading(true);\n\n    // Add the user's message to the conversation history\n    setMessages([...messages, { text: prompt, sender: \"user\" }]);\n\n    try {\n      // Concatenate conversation history to be included in the prompt\n      const history = messages.map(msg => `${msg.sender === \"user\" ? \"User:\" : \"AI:\"} ${msg.text}`).join(\"\\n\");\n      const fullPrompt = history + \"\\nUser: \" + prompt + \"\\nAI:\";\n\n      const response = await openai.createCompletion({\n        model: \"text-davinci-003\",\n        prompt: fullPrompt,\n        temperature: 0.5,\n        max_tokens: 100,\n      });\n\n      // Add the AI's response to the conversation history\n      const responseText = response.data.choices[0].text.trim();\n      setMessages([...messages, { text: responseText, sender: \"ai\" }]);\n      setResult(responseText);\n    } catch (error) {\n      console.error(error);\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Real Estate App</h1>\n      <h2>Your AI Real Estate Assistant</h2>\n      <div className=\"chatbox\">\n        <div className=\"messages\">\n        </div>\n        <div className=\"input-area\">\n          <input type=\"text\" id=\"user-input\" placeholder=\"Type your message here...\" /> {/* Add the / here */}\n          <button id=\"send-button\">Send</button>\n        </div>\n      </div>\n    </div>\n  );\n  }\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}